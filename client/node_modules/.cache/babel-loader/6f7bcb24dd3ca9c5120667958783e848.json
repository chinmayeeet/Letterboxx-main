{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Letterboxx-main\\\\client\\\\src\\\\Posts.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Container } from 'reactstrap';\nimport Stars from './components/Stars';\nexport class PostsContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: []\n    };\n  }\n\n  componentDidMount() {\n    var url = this.props.url;\n    axios.get(url).then(res => {\n      this.setState({\n        posts: res.data\n      });\n    }).catch(e => console.log(e));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"grid\",\n          gridTemplateColumns: \"50% 50%\",\n          padding: \"10px\",\n          textAlign: \"left\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Posts, {\n          items: this.state.posts,\n          size: this.props.size\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport const Posts = props => {\n  return props.items.slice(0, props.size ? props.size : -1).map(item => {\n    const colors = ['lightblue', 'lightgreen', 'yellow'];\n    var color = colors[Math.floor(Math.random() * 3)];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-item\",\n      style: {\n        borderRadius: \"10px\",\n        backgroundColor: color,\n        justifyContent: \"left\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            fontStyle: \"oblique\"\n          },\n          children: [item.title, \" | \", item.movie]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            fontStyle: \"italic\"\n          },\n          children: [\"@\", item.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontFamily: \"consolas\",\n            textAlign: \"center\"\n          },\n          children: item.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n          style: {\n            textAlign: \"left\",\n            marginTop: \"10px\"\n          },\n          children: item.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"grid\",\n            gridTemplateColumns: \"auto auto auto auto auto\",\n            justifyContent: \"left\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Stars, {\n            stars: item.stars\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this);\n  });\n};\n_c = Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["C:/Letterboxx-main/client/src/Posts.js"],"names":["React","Component","axios","Container","Stars","PostsContainer","constructor","props","state","posts","componentDidMount","url","get","then","res","setState","data","catch","e","console","log","render","display","gridTemplateColumns","padding","textAlign","size","Posts","items","slice","map","item","colors","color","Math","floor","random","borderRadius","backgroundColor","justifyContent","fontStyle","title","movie","username","fontFamily","date","marginTop","body","stars","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Container } from 'reactstrap';\r\nimport Stars from './components/Stars';\r\n\r\nexport class PostsContainer extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            posts:[]\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        var url = this.props.url;\r\n        axios.get(url).then(res=>{\r\n            this.setState({\r\n                posts: res.data\r\n            })\r\n        }).catch(e=>console.log(e));\r\n    }\r\n    render(){\r\n        return(\r\n            <Container>\r\n            <div style={{display:\"grid\", gridTemplateColumns:\"50% 50%\", padding:\"10px\",textAlign:\"left\"}}>\r\n                <Posts items={this.state.posts} size={this.props.size}/>\r\n            </div>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n    \r\nexport const Posts = (props) =>{\r\n    return(\r\n        props.items.slice(0, props.size ? props.size : -1).map((item)=>{\r\n            const colors = ['lightblue','lightgreen','yellow']\r\n            var color = colors[Math.floor(Math.random()*3)];\r\n            return(\r\n                <div key={item.id} className=\"grid-item\" style={{borderRadius:\"10px\", backgroundColor:color, justifyContent:\"left\"}}>\r\n                    <div style={{padding:\"20px\"}}>\r\n                    <h3 style={{fontStyle:\"oblique\"}}>{item.title} | {item.movie}</h3>\r\n                    <h4 style={{fontStyle:\"italic\"}}>@{item.username}</h4>\r\n                    <p style={{fontFamily:\"consolas\", textAlign:\"center\"}}>{item.date}</p>\r\n                    <b style={{textAlign:\"left\", marginTop:\"10px\"}}>{item.body}</b>\r\n                    <div style={{display:\"grid\", gridTemplateColumns:\"auto auto auto auto auto\", justifyContent:\"left\"}}>\r\n                        <Stars stars={item.stars}/>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    )\r\n}\r\n        \r\n"]},"metadata":{},"sourceType":"module"}